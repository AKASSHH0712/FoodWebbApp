@model IEnumerable<Food.DTOs.AddtoCartDTO>

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Shopping Cart</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        body {
            background-color: #f4f6f9;
        }

        .cart-container {
            margin-top: 50px;
        }

        .cart-header {
            font-weight: bold;
            background-color: #343a40;
            color: white;
        }

        .cart-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
        }

        .total-price {
            font-size: 1.5em;
            font-weight: bold;
            color: #28a745;
        }

        .quantity-control {
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .quantity-control input {
                width: 50px;
                text-align: center;
            }

        .cart-actions a {
            font-size: 1.1em;
        }

        .empty-cart {
            text-align: center;
            margin-top: 50px;
        }
    </style>
</head>
<body>
    <div class="container cart-container">
        <h2 class="text-center my-4">Your Shopping Cart</h2>

        @if (!Model.Any())
        {
            <div class="empty-cart">
                <p>Your cart is empty!</p>
                <a href="@Url.Action("Index", "Product")" class="btn btn-primary">Continue Shopping</a>
            </div>
        }
        else
        {
            <table class="table table-bordered table-striped">
                <thead class="cart-header text-center">
                    <tr>
                        <th>CARTID</th>
                        <th>USERID</th>
                        <th>PRODUCTID</th>
                        <th>Quantity</th>
                        <th>CATEGORYID</th>
                        <th>PRICE</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-cartid="@item.CARTID">
                            <td>@item.CARTID</td>
                            <td>@item.USERID</td>
                            <td>@item.PRODUCTID</td>
                            <td>
                                <div class="quantity-control">
                                    <button class="btn btn-secondary btn-sm decrease" data-cartid="@item.CARTID">-</button>
                                    <input type="text" class="form-control form-control-sm quantity" value="@item.QUANTITY" readonly />
                                    <button class="btn btn-secondary btn-sm increase" data-cartid="@item.CARTID">+</button>
                                </div>
                            </td>
                            <td>@item.CATEGORYID</td>
                            <td class="item-price">₹@item.PRICE</td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.CARTID }, new { @class = "btn btn-primary btn-sm" }) |
                                @Html.ActionLink("Details", "Details", new { id = item.CARTID }, new { @class = "btn btn-info btn-sm" }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.CARTID }, new { @class = "btn btn-danger btn-sm" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="cart-actions">
                <a href="@Url.Action("Create", "Addtocart")" class="btn btn-success">Add New Item</a>
                <div class="total-price">Total: ₹<span id="totalPrice">0</span></div>
            </div>
        }
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            updateTotalPrice();

            $('.increase').click(function () {
                var cartId = $(this).data('cartid'); // Retrieve the cartId
                var quantityInput = $(this).siblings('.quantity');
                var quantity = parseInt(quantityInput.val()) + 1;
                updateQuantity(cartId, quantity);
            });

            $('.decrease').click(function () {
                var cartId = $(this).data('cartid'); // Retrieve the cartId
                var quantityInput = $(this).siblings('.quantity');
                var quantity = parseInt(quantityInput.val());

                if (quantity > 1) {
                    quantity--;
                    updateQuantity(cartId, quantity);
                }
            });

            function updateQuantity(cartId, quantity) {
                $.ajax({
                    url: '@Url.Action("UpdateQuantity", "Addtocart")',
                    type: 'POST',
                    data: JSON.stringify({ cartId: cartId, quantity: quantity }),
                    contentType: 'application/json',
                    success: function (response) {
                        if (response.success) {
                            $('tr[data-cartid="' + cartId + '"] .quantity').val(quantity);
                            $('tr[data-cartid="' + cartId + '"] .item-price').text('₹' + response.updatedItemPrice.toFixed(2));
                            $('#totalPrice').text(response.totalCartPrice.toFixed(2));
                        } else {
                            showError('Error updating quantity.');
                        }
                    },
                    error: function () {
                        showError('An error occurred.');
                    }
                });
            }

            function showError(message) {
                alert(message);
            }

            function updateTotalPrice() {
                $.ajax({
                    url: '@Url.Action("GetCartDataJson", "Addtocart")',
                    type: 'GET',
                    success: function (data) {
                        var totalPrice = data.reduce(function (acc, item) {
                            return acc + (item.PRICE * item.QUANTITY);
                        }, 0);
                        $('#totalPrice').text(totalPrice.toFixed(2));
                    },
                    error: function () {
                        alert('An error occurred while fetching cart data.');
                    }
                });
            }
        });

    </script>
</body>
</html>
